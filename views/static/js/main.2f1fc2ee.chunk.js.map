{"version":3,"sources":["background_image.jpg","baseUrl.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","questions","pizza","answerHelper","maybePizza","orderId","once","Conversation","index","data","allConvo","resetState","filter","curr","toLowerCase","includes","length","style","display","justifyContent","map","key","temp","name","number","email","address","JSON","stringify","fetch","method","body","headers","credentials","then","response","json","res","alert","console","log","catch","err","App","props","componentWillUnmount","document","removeEventListener","handleKeyPress","a","handleAnswer","setState","currentResponse","state","conversation","tempConvo","push","handleTrack","val","details","page","handleDelete","currId","adminOrderId","adminPassword","adminStatus","handleAdminUpdate","$","ready","animate","opacity","height","getElementById","transform","duration","iterations","addEventListener","this","styles","background","logo","src","alt","id","center","className","chatBox","inputArea","width","marginRight","marginBottom","placeholder","value","onChange","event","target","onClick","alignItems","margin","type","background1","backgroundColor","color","flexDirection","Component","center1","flex","backgroundImage","require","backgroundPosition","backgroundSize","backgroundRepeat","overflowY","paddingBottom","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2f1fc2ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background_image.5dd9d223.jpg\";","const baseUrl=\"http://localhost:3000/\";\nexport default baseUrl;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from \"jquery\";\nimport baseUrl from './baseUrl';\n\nconst questions= [\"Hello, are you looking to order a delicious pizza?\",\n                  \"Which pizza would you like to order?\",\n                  'Please enter exact name of the pizza.Did you mean any of these?',\n                  \"Kindly tell us your name.\",\n                  \"Where would you like us to deliver it to?\",\n                  \"Please enter your contact number.\",\n                  \"Please enter your email id\",\n                  \"Your details are as follows:\",\n                  \"Place order?\",\n                  \"Press enter to get your order ID\",\n                  \"Happy Pizza-ing!\"];\nconst pizza=['margerita','veggie-delight','corn']\nconst answerHelper=['Yes/No',`Name Of Pizza [${pizza}] only`,\n                    \"Please enter exact name\",\n                    'Your Name','Your address',\n                    'Please enter your phone number',\n                    'Please enter your email id',\n                    'Yes/No','Yes/No','Enjoy your pizza',\n                    'Refresh page to place new order']\n\nvar maybePizza=[];\nvar orderId='';\nvar once=0;\nconst Conversation=({index,data,allConvo,resetState})=>{\n  if(index===3){\n    maybePizza=pizza.filter((curr)=>curr.toLowerCase().includes(data.toLowerCase()))\n    if(maybePizza.length===0)\n      maybePizza=pizza;\n    return(\n        <div style={{display:'flex',justifyContent:'flex-end'}}>\n          <p>{data}</p>\n        </div>\n    )\n  }\n  else if(index===4){\n    return(\n      <div>\n          <p>{data}</p>\n          <ul>{maybePizza.map((curr)=><li key={curr}>{curr}</li>)}</ul>\n      </div>\n    )\n  }\n  else if(index===14)\n    return(\n      <div>\n        <p>{data}</p>\n        <p>Name: {allConvo[7]}</p>\n        <p>Ph. Number: {allConvo[11]}</p>\n        <p>Email: {allConvo[13]}</p>\n        <p>Address: {allConvo[9]}</p>\n        <p>Pizza: {allConvo[5]}</p>\n      </div>\n  );\n  else if(index===18 && !once)\n  {\n    once=1;\n    var temp={\n      name:allConvo[7],\n      number:allConvo[11],\n      email:allConvo[13],\n      address:allConvo[9],\n      pizza:allConvo[5]\n    };\n    temp=JSON.stringify(temp);\n    fetch(baseUrl+\"order\",{\n        method:'POST',\n        body:temp,\n        headers:{\n            'Content-Type':'application/json'\n        },\n        credentials:'same-origin'\n    })\n    .then(response=>response.json())\n    .then(res=>{\n      if(res['found']==='error'){\n        alert(\"Please place your order again.\\nThere was some error in your details.\");\n        resetState();\n      }\n      console.log(res);\n      orderId=res['_id'];\n    })\n    .catch(err=>console.log(err))\n    return(\n      <div>\n        <p>{data}</p>\n      </div>\n    )\n  }\n  else if(index===19){\n    return(\n      <>\n        <div>\n          <p>{orderId}</p>\n        </div>\n        <div style={{display:'flex',justifyContent:'flex-end'}}>\n          <p>{data}</p>\n        </div>\n      </>\n    )\n  }\n  else if(index%2===0){\n    return(\n      <div>\n        <p>{data}</p>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div style={{display:'flex',justifyContent:'flex-end'}}>\n        <p>{data}</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      index:0,\n      name:'',\n      number:'',\n      address:'',\n      conversation:[questions[0]],\n      currentResponse:'',\n      page:0,//0 for chat page 1 for track page 2 for edit page\n      details:'No details to show',\n      currId:'',\n      adminOrderId:'',\n      adminPassword:'',\n      adminStatus:''\n    }\n  }\n  async componentDidMount() {\n    \n    await $(\"#chatBox\").ready(function(){\n      $(\"#chatBox\").animate({opacity:0.8,height:'50vh'},800)\n    })\n    await document.getElementById(\"logo\").animate([\n      { transform: 'translateY(1000px)' }, \n      { transform: 'translateY(0px)' }\n    ], { \n      duration: 800,\n      iterations: 1\n    });\n    await document.getElementById(\"track\").animate([\n      { transform: 'translateY(1000px)' }, \n      { transform: 'translateY(0px)' }\n    ], { \n      duration: 800,\n      iterations: 1\n    });\n    await document.getElementById(\"track1\").animate([\n      { transform: 'translateY(1000px)' }, \n      { transform: 'translateY(0px)' }\n    ], { \n      duration: 800,\n      iterations: 1\n    });\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount = () => {\n      document.removeEventListener('keydown', this.handleKeyPress)\n  }\n  handleKeyPress=async(key)=>{\n    if(key.key===\"Enter\"){\n      await this.handleAnswer();\n      this.setState({currentResponse:''})\n    }\n  }\n  handleAnswer=async()=>{\n    var tempResponse=this.state.currentResponse.toLowerCase();\n    if(tempResponse===\"no\" && this.state.index!==3)\n    {\n      this.setState({conversation:[questions[0]],index:0,\n      name:0,number:'',address:'',currentResponse:''})\n    }\n    else\n    {\n      await this.setState({index:this.state.index+1})\n      var tempConvo=this.state.conversation;\n      await tempConvo.push(this.state.currentResponse);\n      if(this.state.index<11){\n        await tempConvo.push(questions[this.state.index]);\n      }\n      else\n        await tempConvo.push(questions[10])\n      await this.setState({conversation:tempConvo,currentResponse:''});\n      \n    }\n  }\n\n  handleTrack=async()=>{\n    fetch(baseUrl+\"track\",{\n      method:'POST',\n      body:JSON.stringify(this.state),\n      headers:{\n          'Content-Type':'application/json'\n      }\n    })\n    .then(response=>response.json())\n    .then((val)=>{\n      if(val!==null){\n        this.setState({details:val})\n        this.setState({page:1})\n      }\n      else{\n        alert(\"Please check you order Id again.\");\n      }\n    })\n  }\n\n  handleDelete=async()=>{\n    fetch(baseUrl+\"delete\",{\n      method:'POST',\n      body:JSON.stringify(this.state),\n      headers:{\n          'Content-Type':'application/json'\n      }\n    })\n    .then(response=>response.json())\n    .then((val)=>{\n      if(val){\n        this.setState({\n          index:0,\n          name:'',\n          number:'',\n          address:'',\n          conversation:[questions[0]],\n          currentResponse:'',\n          page:0,//0 for chat page 1 for track page 2 for edit page\n          details:'No details to show',\n          currId:'',\n          adminOrderId:'',\n          adminPassword:'',\n          adminStatus:''\n        })\n      }\n      alert(\"Order Cancelled!\");\n      this.setState({page:0});\n    })\n  }\n\n  handleAdminUpdate=async()=>{\n    fetch(baseUrl+\"update\",{\n      method:'POST',\n      body:JSON.stringify(this.state),\n      headers:{\n          'Content-Type':'application/json'\n      }\n    })\n    .then(response=>response.json())\n    .then(data=>{\n      if(data['found']==='error')\n      alert(\"Please check the details!\");\n      else{\n        alert('Update successful!');\n        this.setState({adminOrderId:'',adminPassword:'',adminStatus:''})\n      }\n    })\n  }\n\n  render(){\n    if(this.state.page===0)\n    return (\n      <>\n      <div style={styles.background}>\n        <div style={styles.logo} >\n          <img src=\"yoyo.jpg\" height=\"125\" alt=\"logo\" id=\"logo\" />\n        </div>\n        <div style={styles.center} >\n          <div className=\"col-9 col-md-6 col-sm-8\" style={styles.chatBox} id=\"chatBox\">\n            {this.state.conversation.map((data,index)=>{\n              return<Conversation data={data} index={index} \n                allConvo={this.state.conversation} key={index} \n                resetState={()=>this.setState({\n                  index:0,\n                  name:'',\n                  number:'',\n                  address:'',\n                  conversation:[questions[0]],\n                  currentResponse:'',\n                  page:0,//0 for chat page 1 for track page 2 for edit page\n                  details:'No details to show',\n                  currId:'',\n                  adminOrderId:'',\n                  adminPassword:'',\n                  adminStatus:''\n                })}\n                />\n            })}\n            <div style={styles.inputArea}>\n              <input style={{width:'100%',marginRight:5,marginBottom:5 }} placeholder={answerHelper[this.state.index]}\n              value={this.state.currentResponse} onChange={(event)=>{this.setState({currentResponse:event.target.value});}}/>\n              <button className=\"btn btn-primary\" onClick={this.handleAnswer} style={{height:30,display:'flex',alignItems:'center',marginBottom:5}}>Submit</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12\" style={{display:'flex',justifyContent:'center',margin:5}}>\n            <input value={this.state.currId} placeholder=\"Enter order Id\" style={{margin:5,opacity:0.7}} onChange={(event)=>this.setState({currId:event.target.value})}/>\n            <button id=\"track\" onClick={this.handleTrack} className=\"btn btn-primary\" style={{margin:5}}>Track Order</button>\n        </div>\n        <div style={{display:'none',justifyContent:'center',margin:5}}>\n          <div className=\"row\">\n            <div className=\"col-3\"></div>\n            <div style={{width:125,margin:5}}> \n              <input placeholder=\"Enter order Id\" value={this.state.adminOrderId}  style={{margin:5,opacity:0.7}} onChange={(event)=>this.setState({adminOrderId:event.target.value})}/>\n              <input placeholder=\"Enter password\" type=\"password\" value={this.state.adminPassword}  style={{margin:5,opacity:0.7}} onChange={(event)=>this.setState({adminPassword:event.target.value})}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-3\"></div>\n            <div className=\"col-6\">\n              <div style={{width:10}}>\n                <input placeholder=\"Enter status\" value={this.state.adminStatus}  style={{margin:5,opacity:0.7}} onChange={(event)=>this.setState({adminStatus:event.target.value})}/>\n              </div>\n              <div style={{width:150}}>\n                <button id=\"track1\" onClick={this.handleAdminUpdate} className=\"btn btn-primary\" style={{margin:5}}>Admin Update</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n    else if(this.state.page===1)\n    return(\n      <div style={styles.background1}>\n        <div style={{backgroundColor:'#d8d8d8',color:'black',width:'50vw'}} className=\"text-center\">\n          <p>Name:  {this.state.details['name']}</p>\n          <p>Ph. Number:  {this.state.details['number']}</p>\n          <p>Address: {this.state.details['address']}</p>\n          <p>Pizza: {this.state.details['pizza']}</p>\n          <p>Order Id:  {this.state.details['_id']}</p>\n          <p>Status:  {this.state.details['status']}</p>\n        </div>\n        <div style={{flexDirection:'row'}}>\n          <button onClick={()=>this.setState({page:0})} style={{margin:5}}className=\"btn btn-primary\">Go back</button>\n          <button className=\"btn btn-danger\" onClick={this.handleDelete}>Cancel Order</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles={\n  center1:{\n    display:'flex',\n    justifyContent:'center',\n    alignItems:'center',\n    flexDirection:'column'\n  },\n  background1:{\n    width:'100vw',\n    height:'100vh',\n    backgroundColor:\"#1d1d1d\",\n    display:'flex',\n    flex:1,\n    justifyContent:'center',\n    alignItems:'center',\n    flexDirection:'column'\n  },\n  background:{\n    backgroundImage:`url(${require(\"./background_image.jpg\")})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width:'100vw',\n    height:'100vh',\n    opacity:0.8\n  },\n  chatBox:{\n    backgroundColor:'#fff',\n    height:'40vh',\n    width:'70vw',\n    opacity:0.8,\n    overflowY: 'scroll'\n  },\n  inputArea:{\n    display:'flex',\n    alignItems:'flex-end',\n    paddingBottom:1,\n    overflowY: 'scroll'\n  },\n  logo:{\n    display:'flex',\n    justifyContent:'center',\n    alignItems:'flex-end',\n    paddingTop:10,\n    marginBottom:10,\n  },\n  center:{\n    display:'flex',\n    justifyContent:'center',\n    alignItems:'center',\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}